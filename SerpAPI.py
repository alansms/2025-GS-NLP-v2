from serpapi import GoogleSearch

consultas = [
    "enchente em S√£o Paulo",
    "chuvas fortes no sul do Brasil",
    "ventos perigosos litoral",
    "tr√¢nsito parado por deslizamento",
    "frio intenso no sudeste",
    "alagamentos em Belo Horizonte",
    "deslizamento no Rio de Janeiro",
    "temporal no sul",
    "emerg√™ncia clim√°tica no Brasil",
    "alerta de tempestade em Curitiba",
    "quedas de √°rvores ap√≥s vendaval",
    "acidente causado por neblina densa",
    "queda de energia em Santa Catarina",
    "granizo causa danos em carros",
    "temperatura negativa no sul do Brasil",
    "estradas interditadas por desmoronamento",
    "alagamento em esta√ß√£o de metr√¥",
    "chuva causa interdi√ß√£o de escolas",
    "frente fria avan√ßa pelo sudeste",
    "alerta laranja do INMET por temporais",
    # Situa√ß√µes simples e gen√©ricas para testes
    "chuva forte",
    "vento forte",
    "tr√¢nsito intenso",
    "queda de energia",
    "neblina nas estradas"
]

params_base = {
    "engine": "google",
    "location": "Brazil",
    "hl": "pt",
    "gl": "br",
    "api_key": "SUA_CHAVE_SERPAPI"  # substitua pela sua chave real
}

for consulta in consultas:
    print(f"\nüîç Resultados para: {consulta}\n" + "-"*50)
    params = params_base.copy()
    params["q"] = consulta
    params["tbm"] = "nws"  # busca apenas por not√≠cias
    params["tbs"] = "qdr:d"  # restringe aos resultados do √∫ltimo dia

    search = GoogleSearch(params)
    results = search.get_dict()

    noticias = results.get("news_results", [])
    if noticias:
        for noticia in noticias:
            print(f"üì∞ {noticia.get('title')}\nüîó {noticia.get('link')}\n")
    else:
        print("‚ö†Ô∏è Nenhuma not√≠cia encontrada para essa consulta.\n")