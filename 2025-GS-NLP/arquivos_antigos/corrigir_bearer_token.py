#!/usr/bin/env python3
"""
Script para corrigir diretamente o problema do Bearer Token
Esta √© uma solu√ß√£o mais direta que edita diretamente o arquivo app.py
"""

import os
import re

def corrigir_config_twitter():
    """
    Substitui a se√ß√£o de configura√ß√£o do Twitter no app.py
    para mostrar apenas o campo Bearer Token
    """
    print("üîÑ Corrigindo o campo de Bearer Token na interface...")

    # Caminho para o arquivo app.py
    app_py_path = 'app.py'

    # Verifica se o arquivo existe
    if not os.path.exists(app_py_path):
        print(f"‚ùå Erro: Arquivo {app_py_path} n√£o encontrado.")
        return False

    # L√™ o conte√∫do do arquivo
    with open(app_py_path, 'r', encoding='utf-8') as file:
        content = file.read()

    # Define o padr√£o para substituir a se√ß√£o de configura√ß√£o do Twitter
    pattern = r'# Se√ß√£o de Configura√ß√£o API Twitter\s+st\.subheader\("üê¶ Configura√ß√£o Twitter API"\)\s+with st\.expander\("Configurar API do Twitter", expanded=not st\.session_state\.config_twitter\):\s+api_key = st\.text_input\("API Key", type="password"\)\s+api_secret = st\.text_input\("API Secret", type="password"\)\s+access_token = st\.text_input\("Access Token", type="password"\)\s+access_secret = st\.text_input\("Access Token Secret", type="password"\)\s+if st\.button\("Salvar configura√ß√µes"\):\s+if api_key and api_secret and access_token and access_secret:\s+st\.session_state\.config_twitter = ConfigTwitter\(\s+bearer_token="",\s+api_key=api_key,\s+api_secret=api_secret,\s+access_token=access_token,\s+access_token_secret=access_secret\s+\)\s+st\.success\("‚úÖ Configura√ß√µes salvas com sucesso!"\)\s+else:\s+st\.error\("‚ö†Ô∏è Preencha todas as configura√ß√µes\."\)'

    # Define o texto de substitui√ß√£o
    replacement = '''# Se√ß√£o de Configura√ß√£o API Twitter
            st.subheader("üê¶ Configura√ß√£o Twitter API")
            with st.expander("Configurar API do Twitter", expanded=not st.session_state.config_twitter):
                bearer_token = st.text_input("Bearer Token (obrigat√≥rio)", type="password")
                
                if st.button("Salvar configura√ß√µes"):
                    if bearer_token:
                        st.session_state.config_twitter = ConfigTwitter(
                            bearer_token=bearer_token,
                            api_key="",
                            api_secret="",
                            access_token="",
                            access_token_secret=""
                        )
                        # Salvar configura√ß√µes
                        from config_manager import salvar_config_twitter
                        config_dict = {
                            'bearer_token': bearer_token,
                            'api_key': "",
                            'api_secret': "",
                            'access_token': "",
                            'access_token_secret': ""
                        }
                        salvar_config_twitter(config_dict)
                        st.success("‚úÖ Configura√ß√µes salvas com sucesso!")
                    else:
                        st.error("‚ùå O Bearer Token √© obrigat√≥rio.")'''

    # Aplica a substitui√ß√£o usando regex
    new_content = re.sub(pattern, replacement, content)

    # Verifica se a substitui√ß√£o realmente alterou o conte√∫do
    if new_content == content:
        print("‚ö†Ô∏è Aviso: Nenhuma altera√ß√£o foi aplicada. O padr√£o n√£o foi encontrado.")

        # Tentar uma abordagem mais simples, procurando e substituindo linhas espec√≠ficas
        lines = content.split('\n')
        target_found = False
        twitter_section_found = False
        section_start = 0
        section_end = 0

        for i, line in enumerate(lines):
            if "# Se√ß√£o de Configura√ß√£o API Twitter" in line:
                twitter_section_found = True
                section_start = i
            elif twitter_section_found and "api_key = st.text_input" in line:
                target_found = True
            elif twitter_section_found and "st.subheader(\"üîç Filtros\")" in line:
                section_end = i
                break

        if twitter_section_found and target_found and section_start < section_end:
            # Recria o conte√∫do mantendo tudo antes e depois da se√ß√£o do Twitter
            new_content = '\n'.join(lines[:section_start]) + '\n'
            new_content += replacement + '\n'
            new_content += '\n'.join(lines[section_end:])
            print("‚úÖ Aplicada corre√ß√£o alternativa.")
        else:
            print("‚ùå N√£o foi poss√≠vel identificar a se√ß√£o de configura√ß√£o do Twitter.")
            return False

    # Salva o arquivo modificado
    with open(app_py_path, 'w', encoding='utf-8') as file:
        file.write(new_content)

    print("‚úÖ Corre√ß√£o aplicada com sucesso!")
    return True

if __name__ == "__main__":
    print("üîß Iniciando corre√ß√£o da interface de configura√ß√£o do Twitter API...")

    if corrigir_config_twitter():
        print("\n‚úÖ Opera√ß√£o conclu√≠da com sucesso!")
        print("Agora a aplica√ß√£o mostrar√° apenas o campo Bearer Token para a API do Twitter.")
        print("Para executar a aplica√ß√£o, use o comando: streamlit run app.py")
    else:
        print("\n‚ùå N√£o foi poss√≠vel aplicar a corre√ß√£o.")
        print("Por favor, tente editar manualmente o arquivo app.py.")
